SQL> 
SQL> INSERT INTO price
  2  ( price_id
  3  , item_id
  4  , price_type
  5  , active_flag
  6  , start_date
  7  , end_date
  8  , amount
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date)
 13  SELECT	price_s1.nextval
 14  ,		i.item_id
 15  ,		cl.common_lookup_id
 16  ,		af.active_flag
 17  ,		CASE
 18  		  WHEN TRUNC(SYSDATE) - TRUNC(i.release_date) > 30
 19  		  AND af.active_flag = 'Y'
 20  		  THEN i.release_date + 31
 21  		  ELSE i.release_date
 22  		END AS start_date
 23  ,		CASE
 24  		  WHEN (TRUNC(SYSDATE) - TRUNC(i.release_date)) > 30
 25  		  AND af.active_flag = 'N'
 26  		  THEN i.release_date + 30
 27  		END AS end_date
 28  ,		CASE
 29  		  WHEN af.active_flag = 'N'
 30  		  OR (TRUNC(SYSDATE) - TRUNC(i.release_date)) < 31 THEN
 31  		  CASE
 32  		     WHEN dr.rental_days = '1' THEN '3'
 33  		     WHEN dr.rental_days = '3' THEN '10'
 34  		     WHEN dr.rental_days = '5' THEN '15'
 35  		  END
 36  		  ELSE dr.rental_days
 37  		END AS amount
 38  ,		1
 39  ,		SYSDATE
 40  ,		1
 41  ,		SYSDATE
 42  FROM	item i CROSS JOIN
 43  	       (SELECT 'Y' AS active_flag FROM dual
 44  		UNION ALL
 45  		SELECT 'N' AS active_flag FROM dual) af CROSS JOIN
 46  	       (SELECT '1' AS rental_days FROM dual
 47  		UNION ALL
 48  		SELECT '3' AS rental_days FROM dual
 49  		UNION ALL
 50  		SELECT '5' AS rental_days FROM dual) dr
 51  INNER JOIN common_lookup cl ON dr.rental_days = SUBSTR(cl.common_lookup_type,1,1)
 52  WHERE	cl.common_lookup_table = 'PRICE'
 53  AND	cl.common_lookup_column = 'PRICE_TYPE'
 54  AND NOT	((TRUNC(SYSDATE) - TRUNC(i.release_date)) < 31 AND af.active_flag = 'N');

135 rows created.

SQL> 
SQL> SELECT  'OLD Y' AS "Type"
  2  ,	      COUNT(CASE WHEN amount = 1 THEN 1 END) AS "1-Day"
  3  ,	      COUNT(CASE WHEN amount = 3 THEN 1 END) AS "3-Day"
  4  ,	      COUNT(CASE WHEN amount = 5 THEN 1 END) AS "5-Day"
  5  ,	      COUNT(*) AS "TOTAL"
  6  FROM     price p , item i
  7  WHERE    active_flag = 'Y' AND i.item_id = p.item_id
  8  AND     (TRUNC(SYSDATE) - TRUNC(i.release_date)) > 30
  9  AND      end_date IS NULL
 10  UNION ALL
 11  SELECT  'OLD N' AS "Type"
 12  ,	      COUNT(CASE WHEN amount =	3 THEN 1 END) AS "1-Day"
 13  ,	      COUNT(CASE WHEN amount = 10 THEN 1 END) AS "3-Day"
 14  ,	      COUNT(CASE WHEN amount = 15 THEN 1 END) AS "5-Day"
 15  ,	      COUNT(*) AS "TOTAL"
 16  FROM     price p , item i
 17  WHERE    active_flag = 'N' AND i.item_id = p.item_id
 18  AND     (TRUNC(SYSDATE) - TRUNC(i.release_date)) > 30
 19  AND NOT end_date IS NULL
 20  UNION ALL
 21  SELECT  'NEW Y' AS "Type"
 22  ,	      COUNT(CASE WHEN amount =	3 THEN 1 END) AS "1-Day"
 23  ,	      COUNT(CASE WHEN amount = 10 THEN 1 END) AS "3-Day"
 24  ,	      COUNT(CASE WHEN amount = 15 THEN 1 END) AS "5-Day"
 25  ,	      COUNT(*) AS "TOTAL"
 26  FROM     price p , item i
 27  WHERE    active_flag = 'Y' AND i.item_id = p.item_id
 28  AND     (TRUNC(SYSDATE) - TRUNC(i.release_date)) < 31
 29  AND      end_date IS NULL
 30  UNION ALL
 31  SELECT  'NEW N' AS "Type"
 32  ,	      COUNT(CASE WHEN amount = 1 THEN 1 END) AS "1-Day"
 33  ,	      COUNT(CASE WHEN amount = 3 THEN 1 END) AS "3-Day"
 34  ,	      COUNT(CASE WHEN amount = 5 THEN 1 END) AS "5-Day"
 35  ,	      COUNT(*) AS "TOTAL"
 36  FROM     price p , item i
 37  WHERE    active_flag = 'N' AND i.item_id = p.item_id
 38  AND     (TRUNC(SYSDATE) - TRUNC(i.release_date)) < 31
 39  AND      NOT (end_date IS NULL);

Type       1-Day      3-Day      5-Day      TOTAL                                                                                                                                                                                                         
----- ---------- ---------- ---------- ----------                                                                                                                                                                                                         
OLD Y         21         21         21         63                                                                                                                                                                                                         
OLD N         21         21         21         63                                                                                                                                                                                                         
NEW Y          3          3          3          9                                                                                                                                                                                                         
NEW N          0          0          0          0                                                                                                                                                                                                         

4 rows selected.

SQL> 
SQL> ALTER TABLE price
  2    MODIFY price_type number NOT NULL;

Table altered.

SQL> 
SQL>   COLUMN CONSTRAINT FORMAT A10
SQL> SELECT   TABLE_NAME
  2  ,	      column_name
  3  ,	      CASE
  4  		WHEN NULLABLE = 'N' THEN 'NOT NULL'
  5  		ELSE 'NULLABLE'
  6  	      END AS CONSTRAINT
  7  FROM     user_tab_columns
  8  WHERE    TABLE_NAME = 'PRICE'
  9  AND      column_name = 'PRICE_TYPE';

TABLE NAME   COLUMN NAME        CONSTRAINT                                                                                                                                                                                                                
------------ ------------------ ----------                                                                                                                                                                                                                
PRICE        PRICE_TYPE         NOT NULL                                                                                                                                                                                                                  

1 row selected.

SQL> 
SQL> UPDATE   rental_item ri
  2  SET      rental_item_price =
  3  	       (SELECT	 p.amount
  4  		FROM	 price p INNER JOIN common_lookup cl1
  5  		ON	 p.price_type = cl1.common_lookup_id CROSS JOIN rental r
  6  			 CROSS JOIN common_lookup cl2
  7  		WHERE	 p.item_id = ri.item_id AND ri.rental_id = r.rental_id
  8  		AND	 ri.rental_item_type = cl2.common_lookup_id
  9  		AND	 cl1.common_lookup_code = cl2.common_lookup_code
 10  		AND	 r.check_out_date
 11  			   BETWEEN p.start_date AND nvl(p.end_date,sysdate));

13 rows updated.

SQL> 
SQL> SELECT   ri.rental_item_id
  2  ,	      ri.rental_item_price
  3  ,	      p.amount
  4  FROM     price p INNER JOIN common_lookup cl1
  5  ON       p.price_type = cl1.common_lookup_id INNER JOIN rental_item ri
  6  ON       p.item_id = ri.item_id INNER JOIN common_lookup cl2
  7  ON       ri.rental_item_type = cl2.common_lookup_id INNER JOIN rental r
  8  ON       ri.rental_id = r.rental_id
  9  WHERE    cl1.common_lookup_code = cl2.common_lookup_code
 10  AND      r.check_out_date
 11  BETWEEN  p.start_date AND NVL(p.end_date,SYSDATE)
 12  ORDER BY 1;

RENTAL_ITEM_ID RENTAL_ITEM_PRICE     AMOUNT                                                                                                                                                                                                               
-------------- ----------------- ----------                                                                                                                                                                                                               
          1001                 5          5                                                                                                                                                                                                               
          1002                 5          5                                                                                                                                                                                                               
          1003                 5          5                                                                                                                                                                                                               
          1004                 5          5                                                                                                                                                                                                               
          1005                 5          5                                                                                                                                                                                                               
          1006                 5          5                                                                                                                                                                                                               
          1007                 5          5                                                                                                                                                                                                               
          1008                 5          5                                                                                                                                                                                                               
          1009                 5          5                                                                                                                                                                                                               
          1010                 3          3                                                                                                                                                                                                               
          1011                 3          3                                                                                                                                                                                                               
          1012                10         10                                                                                                                                                                                                               
          1013                15         15                                                                                                                                                                                                               

13 rows selected.

SQL> 
SQL> ALTER TABLE rental_item
  2    MODIFY rental_item_price number NOT NULL;

Table altered.

SQL> 
SQL>   COLUMN CONSTRAINT FORMAT A10
SQL> SELECT   TABLE_NAME
  2  ,	      column_name
  3  ,	      CASE
  4  		WHEN NULLABLE = 'N' THEN 'NOT NULL'
  5  		ELSE 'NULLABLE'
  6  	      END AS CONSTRAINT
  7  FROM     user_tab_columns
  8  WHERE    TABLE_NAME = 'RENTAL_ITEM'
  9  AND      column_name = 'RENTAL_ITEM_PRICE';

TABLE NAME   COLUMN NAME        CONSTRAINT                                                                                                                                                                                                                
------------ ------------------ ----------                                                                                                                                                                                                                
RENTAL_ITEM  RENTAL_ITEM_PRICE  NOT NULL                                                                                                                                                                                                                  

1 row selected.

SQL> 
SQL> SPOOL OFF
